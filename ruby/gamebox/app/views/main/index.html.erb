
<div id="input_box" class="input_box">
  <div id="cell_input" class="cell_input"></div>
</div>


<div style="position:absolute;top:10;left:10;">
  <div style="margin-bottom:10px;"></div>
  <table id="rowed3"></table>
  <div id="prowed3"></div>
</div>

<style>
  .cell_input {
    width: 100%;
    height: 100%;
    margin: 0;
    outline: none;
    cursor: text;
    -webkit-user-modify: read-write-plaintext-only;
    white-space: pre-wrap;
  }
  .editnow {
    color: black;
    text-align: left;
    background-color: white;
    max-width: 1742px;
    min-width: 114px;
    min-height: 14px;
    max-height: 347px;
    left: 166px;
    top: 428px;
    right: auto;
  }
  .input_box {
    position: absolute;
    font: normal normal 400 13px arial,sans,sans-serif;
    text-align: left;
    top: -10000px;
    left: -10000px;
    border: 2px #5292F7 solid;
    padding: 0 2px;
    margin: 0;
    z-index: 15;
    resize: none;
    overflow: auto;
    white-space: pre-wrap;
    outline: none;
    -webkit-box-shadow: 1px 2px 5px rgba(0, 0, 0, 0.4);
    -moz-box-shadow: 1px 2px 5px rgba(0,0,0,0.4);
    box-shadow: 1px 2px 5px rgba(0, 0, 0, 0.4);
    word-wrap: break-word;
  }
  .ui-jqgrid {
    cursor: default;
  }
</style>

<script type="text/javascript">


  var current_top;
  var current_left;
  var current_height;
  var current_width;
  var my_updates = [];
  
  function apply_updates(updates) {
    if (updates == null) {
      return false;
    }
    for (var i = 0; i < updates.length; i++) {
      var update = updates[i];
      console.log("action: "+update['action']);
      var td = $("#"+update['rowid']).children()[update['iCol']];
      if (update['action'] == 'enter_cell') {
        $(td).css({'background-color': 'yellow'});
      }
      if (update['action'] == 'restore_cell') {
        $(td).css({'background-color': 'white'});
      }
      if (update['action'] == 'save_cell') {
        $(td).text(update['value']);
        $(td).css({'background-color': 'white'});
      }
    }
    
  }
  
  function poll_for_updates() {
    setTimeout(function(){
      var updates = {user_id: '<%=params[:user_id]%>', updates: my_updates};
      my_updates = [];
      $.ajax({
        type: 'POST',
        url: "/poll",
        async: true,
        data: updates,
        success: function(data, textStatus, xhr) {
          console.log(data['updates']);
          apply_updates(data['updates']);
          poll_for_updates();
        },
        error: function(data, textStatus, xhr) {
        },
        dataType: 'json'
      });
    },1000);
  }
  
  function post_data(rowid, cellname, value, iRow, iCol) {
    $('#input_box').css({'left': -10000, 'top': -10000});
    var postdata = {value: value, rowid: rowid, cellname: cellname, irow: iRow, icol: iCol, user_id: '<%=params[:user_id]%>'};
    $.ajax({
      type: 'POST',
      url: "/update_data",
      async: true,
      data: {
        data: postdata
      },
      success: function(data, textStatus, xhr) {
        my_updates.push({action: 'save_cell', value: value, rowid: rowid, cellname: cellname, iRow: iRow, iCol: iCol});
      },
      error: function(data, textStatus, xhr) {
      },
      dataType: 'json'

    });
    
  }
  
  function my_input(value, options) {
    return $("<div>"+value+"</div>");
    return $("<div class='input_box'><div style=''>"+value+"</div></div>");
    return $("<div class='input_box'><div class='cell_input' style=''>"+value+"</div></div>");
  }

  function my_value(value) {
    return $("#cell_input").text();
  }
  
  function after_restore_cell(rowid, value, iRow, iCol) {
    $("#input_box").css({'left': -10000, 'top': -10000});
    $("#cell_input").text('');
    my_updates.push({action: 'restore_cell', rowid: rowid, value: value, iRow: iRow, iCol: iCol});
    console.log('after_restore_cell: '+iCol);
  }
  
  function before_edit_cell(rowid, cellname, value, iRow, iCol) {
    var td = $("#"+rowid).children()[iCol];
    current_top = $(td).offset().top;
    current_left = $(td).offset().left;
    current_height = $(td).height();
    current_width = $(td).width();
    $(td).css({'height': current_height});
    my_updates.push({action: 'enter_cell', cellname: cellname, rowid: rowid, value: value, iRow: iRow, iCol: iCol});
    //console.log(current_top,current_left,current_width,current_height);
    console.log('before_edit_cell');
  }
  
  function my_element_added(el,value) {
    //var cell_input = $("<div class='cell_input'>"+value+"</div>");
    setTimeout(function(){
      $("#cell_input").text(value);
      $("#input_box").css({'position': 'absolute', 'color': 'black', 'text-align': 'left','background-color': 'white','max-width': '1742px',
        'min-width': current_width-1,'min-height': current_height, 'max-height': '347px','right': 'auto', 'top': current_top-2, 'left': current_left-2}
    )
    },100);
    //$(el).empty().append(cell_input);
  }
  
  function test_format(cellvalue, options, rowObject) {
    var row_id = options['rowId'];
    var col_id = options['colModel']['col_id'];
    console.log("coord: "+ row_id + " "+ col_id);
    //console.log('format: '+options['colModel']['name']);
    //console.log('rowObject: '+rowObject);
    return '';
  }
  var lastsel;
  var edit_options = {after_custom_element_added: my_element_added, custom_value: my_value, custom_element:my_input};
  jQuery("#rowed3").jqGrid({
    url:'/data?q=2',
    datatype: "json",
    colNames:['Inv No','Date', 'Client', 'Amount','Tax','Total','Notes'],
    colModel:[
      {name:'id',index:'id', width:55},
      {col_id: 1, name:'invdate',index:'invdate', width:90, editable:true, edittype: 'custom', editoptions: edit_options, formatter: test_format},
      {name:'name',index:'name', width:100,editable:true, edittype: 'custom', editoptions: edit_options},
      {name:'amount',index:'amount', width:80, align:"left",editable:true, edittype: 'custom', editoptions: edit_options},
      {name:'tax',index:'tax', width:80, align:"left",editable:true, edittype: 'custom', editoptions: edit_options},		
      {name:'total',index:'total', width:80,align:"left",editable:true, edittype: 'custom', editoptions: edit_options},		
      {name:'note',index:'note', width:150, sortable:false,editable:true, edittype: 'custom', editoptions: edit_options}		
   	],
   	rowNum:5000,
   	rowList:[100,200,300],
   	pager: '#prowed3',
   	sortname: 'id',
    rownumbers: true,
    scroll: true,
    toolbar: [true,'top'],
    title: false,
    viewrecords: true,
    sortorder: "desc",
    height: "700",
    width: "1600",
    hoverrows: false,
    cellEdit: true,
    cellsubmit: 'clientArray',
    cellurl: '/update_data',
    beforeEditCell: function(rowid, cellname, value, iRow, iCol){before_edit_cell(rowid, cellname, value, iRow, iCol)},
    beforeSaveCell: function(rowid, cellname, value, iRow, iCol){post_data(rowid, cellname, value, iRow, iCol)},
    afterRestoreCell: function(rowid, cellname, value, iRow, iCol){after_restore_cell(rowid, cellname, value, iRow, iCol)},
    //onSelectRow: function(id){
    //  if(id && id!==lastsel){
    //    jQuery('#rowed3').jqGrid('restoreRow',lastsel);
    //    jQuery('#rowed3').jqGrid('editRow',id,true);
    //    lastsel=id;
    //  }
    //},
    //editurl: "/update_data",
    caption: "Spreadsheet"
  });
  jQuery("#rowed3").jqGrid('navGrid',"#prowed3",{edit:false,add:false,del:false});
  poll_for_updates();
</script>