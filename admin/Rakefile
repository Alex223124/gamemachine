# Add your own tasks in files placed in lib/tasks ending in .rake,
# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.

require File.expand_path('../config/application', __FILE__)

Admin::Application.load_tasks


namespace :protobufs do
  desc "clear out existing protocl buffer definitions"
  task :clear do
    FileList['lib/entity_system/*.pb.rb'].each {|f| rm f}
  end

  desc "compile protocol buffers"
  task :compile => :clear do |t|
      outdir = File.join(File.dirname(__FILE__), 'lib','entity_system')
      outfile = File.join(outdir,'messages.pb.rb')

      protodir = File.join(File.dirname(__FILE__), '../java','src','main','resources')
      protofile = File.join(protodir,'messages.proto')
      rails_protofile = File.join(File.dirname(__FILE__),'messages.proto')

      proto_def = File.read(protofile)
      proto_def.sub!('com.game_machine.entity_system.generated','entity_system')
      File.open(rails_protofile,'w') {|f| f.write(proto_def)}
      system "protoc messages.proto --ruby_out #{outdir}"

      content = []
      IO.readlines(outfile).each do |line|
        if md = line.match(/class (.*)< ::ProtocolBuffers::Message$/)
          puts md[0]
        end
      end

  end
end
