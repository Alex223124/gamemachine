
cluster {


  akka {

    cluster {
      #seed-nodes = [SEEDS]
      acceptable-heartbeat-pause = 10 s
      auto-down-unreachable-after = 10s
    }

    #log-config-on-start = on
    log-dead-letters = "off"
    actor.debug.unhandled = "on"   
    jvm-exit-on-fatal-error=false
    loglevel = "WARNING"

  actor {
    serializers {
      java = "akka.serialization.JavaSerializer"
      bytes = "akka.serialization.ByteArraySerializer"
      myown = "io.gamemachine.core.EntitySerializer"
    }

    serialization-bindings {
      "[B" = bytes
      "io.protostuff.Message" = myown
      "io.gamemachine.messages.ClientMessage" = myown
      "io.gamemachine.messages.Characters" = myown
      "io.gamemachine.messages.Character" = myown
      "io.gamemachine.messages.Player" = myown
      "io.gamemachine.messages.Entity" = myown
      "io.gamemachine.messages.ObjectdbGet" = myown
      "io.gamemachine.messages.ObjectdbPut" = myown
      "io.gamemachine.messages.ObjectdbUpdate" = myown
      "java.io.Serializable" = java
      
    }
    provider = "akka.cluster.ClusterActorRefProvider"
    #serialize-messages = on
    #serialize-creators = on
  }
  remote {
    log-remote-lifecycle-events = off


    netty.tcp {
      hostname = "HOST"
      port = PORT
    }
 }
  }

  
}
