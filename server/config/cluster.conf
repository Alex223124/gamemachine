akka {
 
  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
      "akka.tcp://ClusterSystem@127.0.0.1:2552"]
 
    auto-down = on
  }
}

  
cluster {

default-pinned-dispatcher {
  executor = "thread-pool-executor"
  type = PinnedDispatcher
}

  akka {

    cluster {
      seed-nodes = [SEEDS]
      acceptable-heartbeat-pause = 10 s
      auto-down = on
    }

    actor.debug.unhandled = "on"   
    jvm-exit-on-fatal-error=false
    loglevel = "WARNING"

  actor {
    serializers {
      java = "akka.serialization.JavaSerializer"
      bytes = "akka.serialization.ByteArraySerializer"
      myown = "com.game_machine.core.EntitySerializer"
    }

    serialization-bindings {
      "[B" = bytes
      "java.io.Serializable" = java
      "com.dyuproject.protostuff.Message" = myown
      "com.game_machine.entity_system.generated.ClientMessage" = myown
      "com.game_machine.entity_system.generated.Entity" = myown
      "com.game_machine.entity_system.generated.PlayerRegister" = myown
      "com.game_machine.entity_system.generated.ObjectdbGet" = myown
      "com.game_machine.entity_system.generated.ObjectdbPut" = myown
      "com.game_machine.entity_system.generated.ObjectdbUpdate" = myown
    }
    provider = "akka.cluster.ClusterActorRefProvider"
    #serialize-messages = on
    #serialize-creators = on
  }
  remote {
    log-remote-lifecycle-events = off
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "HOST"
      port = PORT
    }
 }
  }

  akka.actor.deployment {
    /inbound {
      router = round-robin
      nr-of-instances = 10
    }
  }
}
