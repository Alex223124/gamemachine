
// Used to by the entity tracking system to attack additional fields to your
// tracking updates.  You can change any of the fields in TrackData to suit your
// needs, but do NOT remove the message definition!

message NpcData {
  optional string id = 1;
  optional Vector3 spawnpoint = 2;
  optional string leader = 3;
  repeated string followers = 4;
  optional string patrolRoute = 5;
  optional Waypoint waypoint = 6;
  enum NpcType {
    None = 0;
    Guard = 1;
    Bandit = 2;
    Animal = 3;
    Civilian = 4;
  }
  optional NpcType npcType = 7;
}

message NpcDatas {
  repeated NpcData npcData = 1;
}

message Waypoint {
  optional string id = 1;
  repeated Vector3 position = 2;
}

persistent_message Territory {
  required string id = 1;
  required string owner = 2;
  optional int32 recordId = 3;
  optional string keep = 4;
}

message Territories {
  repeated Territory territories = 1;
}
  
persistent_message Guild {
  required string id = 1;
  required string ownerId = 4;
  optional int32 recordId = 5;
  optional string name = 6;
}

persistent_message GuildMembers {
  required string guildId = 1;
  required string playerId = 3;
  optional int32 recordId = 2;
}

message GuildMemberList {
  required string guildId = 1;
  repeated string playerId = 2;
}

persistent_message GuildAction {
  required string action = 1;
  optional string to = 2;
  optional string from = 3;
  optional string response = 4;
  optional string guildId = 5;
  optional int32 recordId = 6;
  optional string inviteId = 7;
  optional string guildName = 8;
}

message Guilds {
  repeated Guild guild = 1;
}

persistent_message WorldObject {
  optional string playerItemId = 1;
  optional int32 action = 2;
  optional string id = 3;
  optional int32 recordId = 4;
  optional string ownerId = 5;
  optional int32 x = 6;
  optional int32 y = 7;
  optional int32 z = 8;
  optional int32 rx = 9;
  optional int32 ry = 10;
  optional int32 rz = 11;
  optional int32 rw = 12;
  optional int32 maxHealth = 13;
  optional int32 health = 14;
  optional string parentId = 15;
  optional bool destructable = 16;
  optional string prefab = 17;
  optional int32 type = 18;
  optional string grid = 19;
  optional string currentUser = 20;
  optional int32 state = 21;
}

persistent_message BuildObject {
  optional string playerItemId = 1;
  optional int32 action = 2;
  optional string id = 3;
  optional int32 recordId = 4;
  optional string ownerId = 5;
  optional int32 x = 6;
  optional int32 y = 7;
  optional int32 z = 8;
  optional int32 rx = 9;
  optional int32 ry = 10;
  optional int32 rz = 11;
  optional int32 rw = 12;
  optional int32 health = 14;
  optional int32 templateId = 18;
  optional string grid = 19;
  optional int64 updatedAt = 22;
  optional int32 state = 23;
  optional int32 updateId = 24;
  optional bool isFloor = 25;
  optional bool isDestructable = 26;
  optional bool hasDoor = 27;
  optional int32 doorStatus = 28;
}

message BuildObjects {
  repeated BuildObject buildObject = 1;
  optional int32 action = 2;
  optional int32 requestedUpdateId = 3;
  optional int32 currentUpdate = 4;
}

persistent_message BuildableArea {
  required string ownerId = 1;
  required float px = 2;
  required float py = 3;
  required float pz = 4;
  required int32 sx = 5;
  required int32 sy = 6;
  required int32 sz = 7;
  optional int32 recordId = 8;
}

message BuildableAreas {
  repeated BuildableArea buildableArea = 1;
}
 
message Bounds {
  optional Vector3 min = 1;
  optional Vector3 max = 2;
}


message WorldObjects {
  repeated WorldObject worldObject = 1;
}

message SiegeCommand {
  optional int32 startLoad = 1;
  optional int32 fire = 2;
  optional float force = 3;
  optional string id = 4;
  optional string hitId = 5;
  optional Vector3 hit = 6;
  optional string skillId = 7;
  optional int32 startUse = 8;
  optional int32 endUse = 9;
  optional string playerId = 10;
  optional string targetType = 11;
  optional string targetId = 12;
}

persistent_message Character {
  required string id = 1;
  optional string umaData = 2;
  optional int32 health = 3;
  optional int32 recordId = 4;
  required string playerId = 5;
  optional int32 part = 6;
  optional int32 parts = 7;
  optional int32 worldx = 8;
  optional int32 worldy = 9;
  optional int32 worldz = 10;
  optional int32 zone = 11;
  optional int32 stamina = 12;
  optional int32 magic = 13;
  optional bool includeUmaData = 14;
  
}

message Characters {
  repeated Character characters = 1;
  optional string id = 2;
}

message PvpGameMessage {
  optional Character character = 1;
  optional Characters characters = 2;
  optional int32 command = 3;
}

message UseSkill {
  required string id = 1;
  optional string targetId = 2;
  optional Vector3 location = 3;
  optional Vector3 direction = 4;
}

message UseItem {
  required string id = 1;
  optional string targetId = 2;
  optional string action = 3;
  required string playerId = 4;
}

message EquippedItem {
  optional string id = 1;
  optional string playerId = 2;
}

message StatusEffect {
  enum Type {
    AttributeDecrease = 0;
    AttributeIncrease = 1;
    Heal = 2;
    Slow = 3;
    Stun = 4;
    Root = 5;
    Death = 6;
    ArmorIncrease = 7;
    SpellResistIncrease = 8;
    ElementalResistIncrease = 9;
    SpellPenetrationIncrease = 10;
    MagicRegenIncrease = 11;
    HealthRegenIncrease = 12;
    StaminaRegenIncrease = 13;
    ArmorDecrease = 14;
    SpellResistDecrease = 15;
    ElementalResistDecrease = 16;
    MagicRegenDecrease = 17;
    HealthRegenDecrease = 18;
    StaminaRegenDecrease = 19;
    Speed = 20;
}

  enum DamageType {
    None = 0;
    Physical = 1;
    Magic = 2;
    Elemental = 3;
  }
  
  optional Type type = 1;
  optional string id = 2;
  optional int32 duration = 3;
  optional int32 ticks = 4;
  optional string attribute = 5;
  optional int32 minValue = 6;
  optional int32 maxValue = 7;
  optional string particleEffect = 8;
  optional DamageType damageType = 9;
}

message Vitals {
  required string id = 1;
  optional int32 health = 2;
  optional int32 stamina = 3;
  optional int32 magic = 4;
  optional int64 lastCombat = 5;
  optional int32 dead = 6;
  optional int32 armor = 7;
  optional int32 spellResist = 8;
  optional int32 elementalResist = 9;
  optional int32 spellPenetration = 10;
  optional int32 magicRegen = 11;
  optional int32 healthRegen = 12;
  optional int32 staminaRegen = 13;
  optional int32 changed = 14;
  optional string grid = 15;
  optional int32 staminaDrain = 16;
}

message VisualEffect {
  optional string id = 1;
  optional string prefab = 2;
  optional Vector3 startPosition = 3;
  optional Vector3 endPosition = 4;
  optional string type = 5;
  optional int32 duration = 6;
}

message StatusEffectResult {
  required string target = 1;
  required string origin = 2;
  required int32 value = 3;
  required string statusEffectId = 4;
}

message StatusEffectTarget {
  enum Action {
  	None = 0;
    Apply = 1;
    Remove = 2;
  }
  enum PassiveFlag {
  	NA = 0;
    AutoRemove = 1;
    ManualRemove = 2;
  }
  required string target = 1;
  required string skill = 2;
  optional Vector3 location = 3;
  optional int32 range = 4;
  repeated StatusEffect statusEffect = 5;
  required string origin = 6;
  optional int32 ticks = 7;
  optional int64 activeId = 8;
  optional int64 lastTick = 9;
  required Action action = 10;
  required PassiveFlag passiveFlag = 11;
}



message Attack {
  required string attacker = 1;
  required string target = 2;
  required string skill = 3;
  optional Vector3 targetLocation = 4;
}

message ComboAttack {
  required string id = 1;
  repeated Attack attack = 2;
}

message Harvest {
  required string id = 1;
  optional int32 result = 2;
  optional int64 harvestedAt = 3;
  optional string characterId = 4;
  optional string itemId = 5;
}

message CraftItem {
  optional CraftableItem craftableItem = 1;
  optional int32 result = 2;
  optional string characterId = 3;
  optional int32 craftedQuantity = 4;
  optional string craftedId = 5;
}

persistent_message Player {
  required string id = 1;
  optional bool authenticated = 2;
  optional int32 authtoken = 3;
  optional string passwordHash = 4;
  optional string gameId = 5;
  optional int32 recordId = 6;
  optional string role = 7;
  optional bool locked = 8;
  optional int32 ip = 9;
  optional int64 ipChangedAt = 10;
  optional string characterId = 11;
  repeated Character characters = 12;
}

message TrackData {
  optional sint32 ix = 1;
  optional sint32 iy = 2;
  optional sint32 iz = 3;
  
  optional string id = 4;
  optional int32 x = 5;
  optional int32 y = 6;
  optional int32 z = 7;

  optional DynamicMessage dynamicMessage = 8;
  optional string gridName = 9;
  optional int32 getNeighbors = 10;
  enum EntityType {
  	NONE = 0;
    PLAYER = 1;
    NPC = 2;
    OTHER = 3;
    ALL = 4;
    SHIP = 5;
  }
  optional EntityType neighborEntityType = 11;
  required EntityType entityType = 12;

  
  optional int32 shortId = 13;
  optional ClientData clientData = 14;
  optional int32 broadcast = 15;
  optional string characterId = 16;
  optional int32 rx = 17;
  optional int32 ry = 18;
  optional int32 rz = 19;
  optional int32 rw = 20;
  optional int32 vaxis = 21;
  optional int32 haxis = 22;
  optional int32 speed = 23;
  optional float velX = 24;
  optional float velZ = 25;
  optional int32 zone = 26;
  optional int32 hidden = 27;
}

message ClientData {
  optional int32 command = 1;
  optional int32 value = 2;
  optional int32 command2 = 3;
  optional int32 command3 = 4;
  optional int32 command4 = 5;
  optional int32 command5 = 6;
  optional int32 command6 = 7;
  optional int32 command7 = 8;
  optional int32 command8 = 9;
  optional int32 command9 = 10;
  optional int32 command1 = 11;
}

message DataRequest {
  required string requester = 1;
  required string name = 2;
}

message TimeCycle {
  optional float currentTime = 1;
  optional float dayCycleLength = 2;
}
	
message GameMessage {
  // Used internally, do not change
  optional string playerId = 1;
  optional string messageId = 2;
  optional int32 destinationId = 3;
  optional string destination = 4;
  optional string agentId = 5;
  optional DynamicMessage dynamicMessage = 6;
  optional PathData pathData = 7;

  // User modifiable
  optional PlayerItems playerItems = 10;
  optional AddPlayerItem addPlayerItem = 11;
  optional RemovePlayerItem removePlayerItem = 12;
  optional RequestPlayerItems requestPlayerItems = 13;
  optional PvpGameMessage pvpGameMessage = 14;
  optional Harvest harvest = 15;
  optional int64 authtoken = 16;
  optional int64 unityMessageId = 17;
  optional CraftItem craftItem = 18;
  optional UseSkill useSkill = 19;
  optional PlayerSkills playerSkills = 20;
  optional Vitals vitals = 21;
  optional Attack attack = 22;
  optional StatusEffect statusEffect = 23;
  optional StatusEffectResult statusEffectResult = 24;
  optional DataRequest dataRequest = 25;
  optional VisualEffect visualEffect = 26;
  optional WorldObjects worldObjects = 27;
  optional SiegeCommand siegeCommand = 28;
  optional Bounds bounds = 29;
  optional UseItem useItem = 30;
  optional TimeCycle timeCycle = 31;
  optional Guilds guilds = 32;
  optional GuildAction guildAction = 33;
  optional GuildMemberList guildMemberList = 34;
  optional Territory territory = 35;
  optional Territories territories = 36;
  optional EquippedItem equippedItem = 37;
  optional ComboAttack comboAttack = 38;
  optional NpcData npcData = 39;
  optional BuildObjects buildObjects = 40;
  optional BuildableAreas buildableAreas = 41;
}

message GameMessages {
  repeated GameMessage gameMessage = 1;
}

message DynamicMessage {
  required string type = 1;
  required bytes message = 2;
}

local_persistent_message PlayerSkill {
  required string id = 1;
  required string name = 2;
  optional int32 recordId = 3;
  required string category = 4;
  optional string damageType = 5;
  required string icon = 6;
  optional string description = 7;
  optional string resource = 8;
  optional int32 resourceCost = 9;
  required string characterId = 10;
  optional string weaponType = 11;
  optional int32 range = 12;
  optional string statusEffectId = 13;
  optional int32 level = 14;
  optional int32 resourceCostPerTick = 15;
  optional int32 isComboPart = 16;
  optional int32 isPassive = 17;
}

message PlayerSkills {
  repeated PlayerSkill playerSkill = 1;
}

local_persistent_message CraftableItem {
  required string id = 1;
  optional string item1 = 2;
  optional int32 item1_quantity = 3;
  optional string item2 = 4;
  optional int32 item2_quantity = 5;
  optional string item3 = 6;
  optional int32 item3_quantity = 7;
  optional string item4 = 8;
  optional int32 item4_quantity = 9;
  optional int32 recordId = 10;
}

// Inventory messages

local_persistent_message PlayerItem {
  required string id = 1;
  required string name = 2;
  required int32 quantity = 3;
  optional string color = 4;
  optional bool weapon = 5;
  optional Consumable consumable = 6;
  optional Cost cost = 8;
  optional string playerId = 9;
  optional int32 recordId = 10;
  optional string icon = 11;
  optional int32 harvestable = 12;
  optional int32 craftingResource = 13;
  optional int32 craftable = 14;
  optional ModelInfo modelInfo = 15;
  optional bool isConsumable = 16;
  optional int32 type = 17;
  optional int32 maxHealth = 18;
  optional int32 health = 19;
  optional int32 level = 20;
}

local_message ModelInfo {
  optional float attachX = 1;
  optional float attachY = 2;
  optional float attachZ = 3;
  optional float rotateX = 4;
  optional float rotateY = 5;
  optional float rotateZ = 6;
  optional float scaleX = 7;
  optional float scaleY = 8;
  optional float scaleZ = 9;
  optional string resource = 10;
  optional string prefab = 11;
  optional string weapon_type = 12;
}

local_message Cost {
  required float amount = 1;
  required string currency = 2;
}

local_message Consumable {
  required string type = 1;
  required string size = 2;
}

local_message Weapon {
  required int32 attack = 1;
  required int32 delay = 2;
}

local_message RequestPlayerItems {
  optional bool catalog = 1;
}

message PlayerItems {
  optional bool catalog = 1;
  repeated PlayerItem playerItem = 2;
}

local_message AddPlayerItem {
  required PlayerItem playerItem = 1;
}

local_message RemovePlayerItem {
  required string id = 1;
  required int32 quantity = 2;
}

message Players {
  repeated Player player = 1;
}
  
// For testing
persistent_message TestObject {
  required string id = 12;
  optional string optionalString = 1;
  required string requiredString = 2;
  repeated int32 numbers = 3;
  optional bytes bstring = 4;
  optional bool bvalue = 5;
  optional double dvalue = 6;
  optional float fvalue = 7;
  optional int64 numbers64 = 8;
  repeated Player player = 9;
  optional int32 recordId = 10;
  
}