
// Used to by the entity tracking system to attack additional fields to your
// tracking updates.  You can change any of the fields in TrackData to suit your
// needs, but do NOT remove the message definition!

persistent_message Character {
  required string id = 1;
  optional string umaData = 2;
  optional int32 health = 3;
  optional int32 recordId = 4;
  required string playerId = 5;
  optional int32 part = 6;
  optional int32 parts = 7;
  optional int32 worldx = 8;
  optional int32 worldy = 9;
  optional int32 worldz = 10;
  optional string zone = 11;
}

message Characters {
  repeated Character characters = 1;
}

message PvpGameMessage {
  optional Character character = 1;
  optional Characters characters = 2;
  optional int32 command = 3;
}

message UseSkill {
  required string id = 1;
  optional string targetId = 2;
  optional Vector3 location = 3;
  optional Vector3 direction = 4;
}

message Vitals {
  required string id = 1;
  optional int32 health = 2;
}

message Attack {
  required string attacker = 1;
  required string target = 2;
  required string skill = 3;
  optional int32 health = 4;
  optional int32 stamina = 5;
  optional int32 magic = 6;
  optional Vector3 targetLocation = 7;
}

message Harvest {
  required string id = 1;
  optional int32 result = 2;
  optional int64 harvestedAt = 3;
  optional string characterId = 4;
  optional string itemId = 5;
}

message CraftItem {
  optional CraftableItem craftableItem = 1;
  optional int32 result = 2;
  optional string characterId = 3;
  optional int32 craftedQuantity = 4;
  optional string craftedId = 5;
}

persistent_message Player {
  required string id = 1;
  optional bool authenticated = 2;
  optional int32 authtoken = 3;
  optional string passwordHash = 4;
  optional string gameId = 5;
  optional int32 recordId = 6;
  optional string role = 7;
  optional bool locked = 8;
  optional int32 ip = 9;
  optional int64 ipChangedAt = 10;
  optional string characterId = 11;
}

message TrackData {
  optional sint32 ix = 1;
  optional sint32 iy = 2;
  optional sint32 iz = 3;
  
  optional string id = 4;
  optional int32 x = 5;
  optional int32 y = 6;
  optional int32 z = 7;

  optional DynamicMessage dynamicMessage = 8;
  optional string gridName = 9;
  optional int32 getNeighbors = 10;
  enum EntityType {
    PLAYER = 0;
    NPC = 1;
    OTHER = 2;
    ALL = 3;
  }
  optional EntityType neighborEntityType = 11;
  optional EntityType entityType = 12;

  
  optional int32 shortId = 13;
  optional ClientData clientData = 14;
  optional int32 broadcast = 15;
  optional string characterId = 16;
}

message ClientData {
  optional int32 command = 1;
  optional int32 value = 2;
  optional int32 command2 = 3;
  optional int32 command3 = 4;
  optional int32 command4 = 5;
  optional int32 command5 = 6;
  optional int32 command6 = 7;
  optional int32 command7 = 8;
  optional int32 command8 = 9;
  optional int32 command9 = 10;
  optional int32 command1 = 11;
}

message GameMessage {
  // Used internally, do not change
  optional string playerId = 1;
  optional string messageId = 2;
  optional int32 destinationId = 3;
  optional string destination = 4;
  optional string agentId = 5;
  optional DynamicMessage dynamicMessage = 6;
  optional PathData pathData = 7;

  // User modifiable
  optional PlayerItems playerItems = 10;
  optional AddPlayerItem addPlayerItem = 11;
  optional RemovePlayerItem removePlayerItem = 12;
  optional RequestPlayerItems requestPlayerItems = 13;
  optional PvpGameMessage pvpGameMessage = 14;
  optional Harvest harvest = 15;
  optional int64 authtoken = 16;
  optional int64 unityMessageId = 17;
  optional CraftItem craftItem = 18;
  optional UseSkill useSkill = 19;
  optional PlayerSkills playerSkills = 20;
  optional Vitals vitals = 21;
  optional Attack attack = 22;
}

message GameMessages {
  repeated GameMessage gameMessage = 1;
}

message DynamicMessage {
  required string type = 1;
  required bytes message = 2;
}

local_persistent_message PlayerSkill {
  required string id = 1;
  required string name = 2;
  optional int32 recordId = 3;
  required string category = 4;
  optional string damageType = 5;
  required string icon = 6;
  optional string description = 7;
  optional string resource = 8;
  optional int32 resourceCost = 9;
  required string characterId = 10;
  optional string weaponType = 11;
  optional int32 radius = 12;
}

message PlayerSkills {
  repeated PlayerSkill playerSkill = 1;
}

local_persistent_message CraftableItem {
  required string id = 1;
  optional string item1 = 2;
  optional int32 item1_quantity = 3;
  optional string item2 = 4;
  optional int32 item2_quantity = 5;
  optional string item3 = 6;
  optional int32 item3_quantity = 7;
  optional string item4 = 8;
  optional int32 item4_quantity = 9;
  optional int32 recordId = 10;
}

// Inventory messages

local_persistent_message PlayerItem {
  required string id = 1;
  required string name = 2;
  required int32 quantity = 3;
  optional string color = 4;
  optional bool weapon = 5;
  optional Consumable consumable = 6;
  optional Cost cost = 8;
  optional string playerId = 9;
  optional int32 recordId = 10;
  optional string icon = 11;
  optional int32 harvestable = 12;
  optional int32 craftingResource = 13;
  optional int32 craftable = 14;
  optional ModelInfo modelInfo = 15;
}

local_message ModelInfo {
  optional float attachX = 1;
  optional float attachY = 2;
  optional float attachZ = 3;
  optional float rotateX = 4;
  optional float rotateY = 5;
  optional float rotateZ = 6;
  optional float scaleX = 7;
  optional float scaleY = 8;
  optional float scaleZ = 9;
  optional string resource = 10;
  optional string prefab = 11;
  optional string weapon_type = 12;
}

local_message Cost {
  required float amount = 1;
  required string currency = 2;
}

local_message Consumable {
  required string type = 1;
  required string size = 2;
}

local_message Weapon {
  required int32 attack = 1;
  required int32 delay = 2;
}

local_message RequestPlayerItems {
  optional bool catalog = 1;
}

message PlayerItems {
  optional bool catalog = 1;
  repeated PlayerItem playerItem = 2;
}

local_message AddPlayerItem {
  required PlayerItem playerItem = 1;
}

local_message RemovePlayerItem {
  required string id = 1;
  required int32 quantity = 2;
}

// For testing
persistent_message TestObject {
  required string id = 12;
  optional string optionalString = 1;
  required string requiredString = 2;
  repeated int32 numbers = 3;
  optional bytes bstring = 4;
  optional bool bvalue = 5;
  optional double dvalue = 6;
  optional float fvalue = 7;
  optional int64 numbers64 = 8;
  repeated Player player = 9;
  optional int32 recordId = 10;
  
}