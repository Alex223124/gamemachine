
// Used to by the entity tracking system to attack additional fields to your
// tracking updates.  You can change any of the fields in TrackData to suit your
// needs, but do NOT remove the message definition!

local_message VitalsContainer {
  repeated Vitals vitals = 1;
}

local_message Vitals {

  enum Template {
    PlayerTemplate = 0;
    BuildObjectTemplate = 1;
    NpcTemplate = 2;
  }
  
  enum VitalsType {
    None = 0;
    Character = 1;
    Object = 2;
    BuildObject = 3;
  }
 
   
  enum Attribute {
    SpellResist = 0;
    ElementalResist = 1;
    SpellPenetration = 2;
    MagicRegen = 3;
    HealthRegen = 4;
    StaminaRegen = 5;
    Armor = 6;
    Magic = 7;
    Health = 8;
    Stamina = 9;
    MovementSpeed = 10;
    AbilitySpeed = 11;
  }
  
  required string characterId = 1;
  optional int64 lastCombat = 5;
  optional int32 dead = 6;
  optional int32 changed = 14;
  optional string entityId = 15;
  optional VitalsType type = 18;
  optional int32 zone = 19;
  optional int32 spellResist = 22;
  optional int32 elementalResist = 23;
  optional int32 spellPenetration = 24;
  optional int32 magicRegen = 25;
  optional int32 healthRegen = 26;
  optional int32 staminaRegen = 27;
  optional int32 armor = 28;
  optional int32 magic = 29;
  optional int32 health = 30;
  optional int32 stamina = 31;
  optional int32 movementSpeed = 32;
  optional int32 abilitySpeed = 33;
  optional Template template = 34;
}

local_message StatusEffect {
  enum Type {
  	StatusEffectNone = 0;
    AttributeDecrease = 1;
    AttributeIncrease = 2;
    AttributeMaxIncrease = 3;
    AttributeMaxDecrease = 4;
}

  
  enum DamageType {
    DamageTypeNone = 0;
    Physical = 1;
    Magic = 2;
    Elemental = 3;
  }
  
  enum Resource {
    ResourceNone = 0;
    ResourceMagic = 1;
    ResourceStamina = 2;
  }
  
  optional Type type = 1;
  optional string id = 2;
  optional int32 duration = 3;
  optional int32 ticks = 4;
  optional int32 minValue = 6;
  optional int32 maxValue = 7;
  optional string particleEffect = 8;
  optional DamageType damageType = 9;
  optional string icon_path = 10;
  optional string icon_uuid = 11;
  optional int32 ticksPerformed = 12;
  optional Resource resource = 13;
  optional int32 resourceCost = 14;
  optional int32 range = 15;
  optional string attribute = 17;
  optional int32 maxStacks = 18;
}

local_message StatusEffects {
  repeated StatusEffect statusEffect = 1;
}

local_message TerrainEdit {
  enum Type {
  NONE = 0;
  DETAIL = 1;
  ALPHA = 2;
  HEIGHT = 3;
  TREE = 4;
  }
  
  optional  int32 x = 1;
  optional int32 y = 2;
  optional int32 detailLayer = 3;
  optional int32 value = 4;
  optional Type type = 5;
  optional string id = 6;
  optional int32 recordId = 7;
  optional int32 texture = 8;
  optional float height = 9;
  optional int64 createdAt = 10;
  optional string terrain = 11;
}

local_message TerrainEdits {
  repeated TerrainEdit terrainEdit = 1;
}

local_message GroundBlockObject {
  enum Status {
    NONE = 0;
    PLACED = 1;
    CLEARED = 2;
    TOP = 3;
  }
   
  repeated GmVector3 vertices = 1;
  optional GmVector3 position = 2;
  optional GmQuaternion rotation = 3;
  optional string id = 4;
  optional int32 verticeCount = 5;
  optional string tag = 6;
  optional string layer = 7;
  optional int32 gbLayer = 8;
  optional bool molded = 9;
  optional Status status = 10;
  optional bool canRemove = 11;
  optional bool isTop = 12;
  optional int32 gbType = 13;
}

local_message Ping {
  optional string id = 1;
}
local_message Pong {
  optional string id = 1;
}

local_message GmStats {
  optional string id = 1;
  optional string action = 2;
  optional int64 messageCountIn = 3;
  optional int64 messageCountOut = 4;
  optional int64 messageCountInOut = 5;
  optional int64 bytesOut = 6;
  optional int32 connectionCount = 7;
  optional int64 playerBytesOut = 8;
  optional string playerId = 9;
  optional int64 bytesPerMessageOut = 10;
}

local_message NpcData {
  optional string id = 1;
  optional GmVector3 spawnpoint = 2;
  optional string leader = 3;
  repeated string followers = 4;
  optional string patrolRoute = 5;
  optional Waypoint waypoint = 6;
  enum NpcType {
    None = 0;
    Guard = 1;
    Bandit = 2;
    Animal = 3;
    Civilian = 4;
  }
  optional NpcType npcType = 7;
}

local_message NpcDatas {
  repeated NpcData npcData = 1;
}

local_message Waypoint {
  optional string id = 1;
  repeated GmVector3 position = 2;
}

local_persistent_message Territory {
  required string id = 1;
  required string owner = 2;
  optional int32 recordId = 3;
  optional string keep = 4;
}

local_message Territories {
  repeated Territory territories = 1;
}
  
local_persistent_message Guild {
  required string id = 1;
  required string ownerId = 4;
  optional int32 recordId = 5;
  optional string name = 6;
}

local_persistent_message GuildMembers {
  required string guildId = 1;
  required string playerId = 3;
  optional int32 recordId = 2;
}

local_message GuildMemberList {
  required string guildId = 1;
  repeated string playerId = 2;
}

persistent_message GuildAction {
  required string action = 1;
  optional string to = 2;
  optional string from = 3;
  optional string response = 4;
  optional string guildId = 5;
  optional int32 recordId = 6;
  optional string inviteId = 7;
  optional string guildName = 8;
}

local_message Guilds {
  repeated Guild guild = 1;
}

local_persistent_message WorldObject {
  optional string playerItemId = 1;
  optional int32 action = 2;
  optional string id = 3;
  optional int32 recordId = 4;
  optional string ownerId = 5;
  optional int32 x = 6;
  optional int32 y = 7;
  optional int32 z = 8;
  optional int32 rx = 9;
  optional int32 ry = 10;
  optional int32 rz = 11;
  optional int32 rw = 12;
  optional int32 maxHealth = 13;
  optional int32 health = 14;
  optional string parentId = 15;
  optional bool destructable = 16;
  optional string prefab = 17;
  optional int32 type = 18;
  optional string grid = 19;
  optional string currentUser = 20;
  optional int32 state = 21;
}

local_persistent_message BuildObject {

  enum Action {
    None = 0;
    Create = 1;
    Remove = 2;
    Update = 3;
    UpdateProp = 4;
    SetHealth = 5;
    RemoveAll = 6;
  }
  
  enum State {
    Active = 0;
    Removed = 1;
  }
  
  optional string playerItemId = 1;
  optional Action action = 2;
  optional string id = 3;
  optional int32 recordId = 4;
  optional string ownerId = 5;
  optional int32 x = 6;
  optional int32 y = 7;
  optional int32 z = 8;
  optional int32 rx = 9;
  optional int32 ry = 10;
  optional int32 rz = 11;
  optional int32 rw = 12;
  optional int32 health = 14;
  optional int32 templateId = 18;
  optional string grid = 19;
  optional int64 updatedAt = 22;
  optional State state = 23;
  optional int32 updateId = 24;
  optional bool isFloor = 25;
  optional bool isDestructable = 26;
  optional bool hasDoor = 27;
  optional int32 doorStatus = 28;
  optional bytes groundBlockObject = 29;
  optional bool isGroundBlock = 30;
  optional int32 chunk = 31;
  optional bytes terrainEdit = 32;
  optional bool isTerrainEdit = 33;
  optional bytes customBytes = 34;
  optional string customString = 35;
  optional string textureId = 36;
  optional bytes slots = 37;
  optional int64 placedAt = 38;
  optional SlotInfo slotInfo = 40;
  optional int32 zone = 41;
}
  
 local_message SlotInfo {
   required string placedBlockId = 1;
   required string slotId = 2;
 }
 
 local_message BuildObjectSlot {
   required string slotId = 1;
   required string buildObjectId = 2;
   optional int64 placedAt = 3;
   optional bool buildOverTime = 4;
   optional int32 buildTime = 5;
 }
 
 local_message BuildObjectSlots {
   repeated BuildObjectSlot buildObjectSlot = 1;
 }
 
local_message BuildObjects {
  enum Action {
    None = 0;
    GetStatus = 1;
    PropUpdate = 2;
    SetRotation = 3;
  }
  
  repeated BuildObject buildObject = 1;
  optional Action action = 2;
  optional int32 requestedUpdateId = 3;
  optional int32 currentUpdate = 4;
}

local_message BuildObjectChunk {
  optional bytes data = 1;
  optional int32 chunk = 2;
}

local_message BuildObjectChunks {
  repeated BuildObjectChunk buildObjectChunk = 1;
 }

local_persistent_message BuildableArea {
  required string ownerId = 1;
  required float px = 2;
  required float py = 3;
  required float pz = 4;
  required int32 sx = 5;
  required int32 sy = 6;
  required int32 sz = 7;
  optional int32 recordId = 8;
}

local_message BuildableAreas {
  repeated BuildableArea buildableArea = 1;
}
 
local_message GmBounds {
  optional GmVector3 min = 1;
  optional GmVector3 max = 2;
}


local_message WorldObjects {
  repeated WorldObject worldObject = 1;
}

local_message SiegeCommand {
  enum Action {
    ActionNone = 0;
    SetRotation = 1;
    Use = 2;
    Release = 3;
  }
  
  enum Result {
    ResultNone = 0;
    Approved = 1;
    Declined = 2;
  }
  
  optional Action action = 1;
  optional BuildObject buildObject = 2;
  optional Result result = 3;
  optional string characterId = 4;
  optional string buildObjectId = 5;
}
 
local_persistent_message Character {
  required string id = 1;
  optional string umaData = 2;
  optional int32 recordId = 4;
  required string playerId = 5;
  optional int32 part = 6;
  optional int32 parts = 7;
  optional int32 worldx = 8;
  optional int32 worldy = 9;
  optional int32 worldz = 10;
  optional int32 zone = 11;
  optional bool includeUmaData = 12;
  optional int32 level = 14;
  optional Vitals.Template vitalsTemplate = 15;
}

local_message Characters {
  repeated Character characters = 1;
  optional string id = 2;
}

message PvpGameMessage {
  optional Character character = 1;
  optional Characters characters = 2;
  optional int32 command = 3;
}

local_message UseSkill {
  required string id = 1;
  optional string targetId = 2;
  optional GmVector3 location = 3;
  optional GmVector3 direction = 4;
}

local_message UseItem {
  required string id = 1;
  optional string targetId = 2;
  optional string action = 3;
  required string playerId = 4;
}

local_message EquippedItem {
  optional string id = 1;
  optional string playerId = 2;
}


local_message StatusEffectResult {
  optional string targetCharacterId = 1;
  optional string originCharacterId = 2;
  required int32 value = 3;
  required string statusEffectId = 4;
  optional string targetEntityId = 5;
}

local_message StatusEffectTarget {
  enum Action {
    None = 0;
    Apply = 1;
    Remove = 2;
  }
  enum PassiveFlag {
    NA = 0;
    AutoRemove = 1;
    ManualRemove = 2;
  }
 
  required string targetEntityId = 1;
  optional GmVector3 location = 3;
  repeated StatusEffect statusEffect = 5;
  required string originCharacterId = 6;
  optional int64 activeId = 8;
  optional int64 lastTick = 9;
  required Action action = 10;
  required PassiveFlag passiveFlag = 11;
  optional string originEntityId = 12;
  optional Attack attack = 13;
}



local_message Attack {
  enum TargetType {
    None = 0;
    Character = 1;
    Object = 2;
    BuildObject = 3;
  }
  optional string attackerCharacterId = 1;
  optional string targetId = 2;
  required PlayerSkill playerSkill = 3;
  optional GmVector3 targetLocation = 4;
  optional TargetType targetType = 5;
}

local_message ComboAttack {
  required string id = 1;
  repeated Attack attack = 2;
}

local_message Harvest {
  required string id = 1;
  optional int32 result = 2;
  optional int64 harvestedAt = 3;
  optional string characterId = 4;
  optional string itemId = 5;
}

local_message CraftItem {
  optional CraftableItem craftableItem = 1;
  optional int32 result = 2;
  optional string characterId = 3;
  optional int32 craftedQuantity = 4;
  optional string craftedId = 5;
}

persistent_message Player {
  required string id = 1;
  optional bool authenticated = 2;
  optional int32 authtoken = 3;
  optional string passwordHash = 4;
  optional string gameId = 5;
  optional int32 recordId = 6;
  optional string role = 7;
  optional bool locked = 8;
  optional int32 ip = 9;
  optional int64 ipChangedAt = 10;
  optional string characterId = 11;
  repeated Character characters = 12;
}

message TrackData {
  optional sint32 ix = 1;
  optional sint32 iy = 2;
  optional sint32 iz = 3;
  
  optional string id = 4;
  optional int32 x = 5;
  optional int32 y = 6;
  optional int32 z = 7;

  optional DynamicMessage dynamicMessage = 8;
  optional string gridName = 9;
  optional int32 getNeighbors = 10;
  enum EntityType {
    None = 0;
    Any = 1;
    Player = 2;
    Npc = 3;
    Object = 4;
    All = 5;
    BuildObject = 6;
    Vehicle = 7;
  }
  optional EntityType neighborEntityType = 11;
  required EntityType entityType = 12;

  
  optional int32 shortId = 13;
  optional UserDefinedData userDefinedData = 14;
  optional int32 broadcast = 15;
  optional string characterId = 16;
  optional int32 rx = 17;
  optional int32 ry = 18;
  optional int32 rz = 19;
  optional int32 rw = 20;
  optional int32 vaxis = 21;
  optional int32 haxis = 22;
  optional int32 speed = 23;
  optional float velX = 24;
  optional float velZ = 25;
  optional int32 zone = 26;
  optional int32 hidden = 27;
  optional int32 yaxis = 28;
}

local_message UserDefinedData {
  optional int32 command = 1;
  optional int32 value = 2;
  optional int32 userdefInt2 = 3;
  optional int32 userdefInt3 = 4;
  optional int32 userdefInt4 = 5;
  optional int32 userdefInt5 = 6;
  optional int32 userdefInt6 = 7;
  optional int32 userdefInt7 = 8;
  optional int32 userdefInt8 = 9;
  optional int32 userdefInt9 = 10;
  optional int32 userdefInt1 = 11;
  optional int32 rx = 12;
  optional int32 ry = 13;
  optional int32 rz = 14;
  optional int32 rw = 15;
  optional sint32 x = 16;
  optional sint32 y = 17;
  optional sint32 z = 18;
  
  optional int32 userdefInt10 = 19;
  optional int32 userdefInt11 = 20;
  optional int32 userdefInt12 = 21;
  optional int32 userdefInt13 = 22;
  optional int32 userdefInt14 = 23;
  optional int32 userdefInt15 = 24;
}

local_message DataRequest {
  required string requester = 1;
  required string name = 2;
}

local_message TimeCycle {
  optional float currentTime = 1;
  optional float dayCycleLength = 2;
}
	


message DynamicMessage {
  required string type = 1;
  required bytes message = 2;
}



local_persistent_message PlayerSkill {
  enum Category {
    SingleTarget = 0;
	Aoe = 1;
	Pbaoe = 2;
	Self = 3;
	AoeDot = 4;
  }
    
  required string id = 1;
  optional string name = 2;
  optional int32 recordId = 3;
  optional string icon_path = 6;
  optional string description = 7;
  required string characterId = 10;
  
  optional string statusEffectId = 13;
  optional int32 level = 14;
  optional int32 isComboPart = 16;
  optional int32 isPassive = 17;
  optional string icon_uuid = 19;
  optional string statusEffects = 20;
  optional Category category = 22;
}

message PlayerSkills {
  repeated PlayerSkill playerSkill = 1;
}

local_persistent_message CraftableItem {
  required string id = 1;
  optional string item1 = 2;
  optional int32 item1_quantity = 3;
  optional string item2 = 4;
  optional int32 item2_quantity = 5;
  optional string item3 = 6;
  optional int32 item3_quantity = 7;
  optional string item4 = 8;
  optional int32 item4_quantity = 9;
  optional int32 recordId = 10;
}

local_message CraftingRecipes {
  repeated CraftingRecipe craftingRecipes = 1;
  required string itemCatalog = 2;
}

local_message CraftingReward {
  required string id = 1;
  required int32 quantity = 2;
  required int32 level = 3;
}

local_message CraftingRecipe {
  required string id = 1;
  repeated CraftingElement elements = 2;
  optional CraftingTool tool = 3;
  required bool orderMatters = 4;
  required float timeToComplete = 5;
  repeated CraftingReward rewards = 6;
  required int32 maxUses = 7;
  required bool active = 8;
}

local_message CraftingTool {
  required string id = 1;
  required int32 level = 2;
}

local_message CraftingElement {
  required string id = 1;
  required int32 quantity = 2;
  required int32 level = 3;
  required int32 order = 4;
}

// Inventory messages

local_persistent_message PlayerItem {
  required string id = 1;
  required string name = 2;
  required int32 quantity = 3;
  optional string color = 4;
  optional bool weapon = 5;
  optional Cost cost = 8;
  optional string playerId = 9;
  optional int32 recordId = 10;
  optional string icon = 11;
  optional int32 harvestable = 12;
  optional int32 craftingResource = 13;
  optional int32 craftable = 14;
  optional bool isConsumable = 16;
  optional int32 type = 17;
  optional int32 maxHealth = 18;
  optional int32 health = 19;
  optional int32 level = 20;
  optional string characterId = 21;
  optional string containerId = 22;
  optional int32 updatedAt = 23;
  optional string category = 24;
  optional string locationId = 25;
  optional int32 slotCount = 26;
  optional bool stackable = 27;
  optional string locationType = 28;
  optional int32 stackMax = 29;
  optional int32 containerSlot = 30;
  optional string icon_uuid = 31;
  optional string icon_path = 32;
  optional string referenceId = 33;
  required bool hidden = 34;
  optional int32 maxQuantity = 35;
  required bool active = 36;
  required float weight = 37;
  optional int32 templateBlockId = 38;
}

local_message ModelInfo {
  optional float attachX = 1;
  optional float attachY = 2;
  optional float attachZ = 3;
  optional float rotateX = 4;
  optional float rotateY = 5;
  optional float rotateZ = 6;
  optional float scaleX = 7;
  optional float scaleY = 8;
  optional float scaleZ = 9;
  optional string resource = 10;
  optional string prefab = 11;
  optional string weapon_type = 12;
}

local_message Cost {
  required float amount = 1;
  optional string currency = 2;
}

local_message Consumable {
  required string type = 1;
  required string size = 2;
}

local_message Weapon {
  required int32 attack = 1;
  required int32 delay = 2;
}

local_message RequestPlayerItems {
  optional bool catalog = 1;
  optional string characterId = 2;
  optional int32 result = 3;
  optional PlayerItems playerItems = 4;
  optional string query = 5;
}

message PlayerItems {
  optional bool catalog = 1;
  repeated PlayerItem playerItem = 2;
}

local_message UpdatePlayerItem {
  optional int32 result = 1;
  optional PlayerItem playerItem = 2;
}

local_message AddPlayerItem {
  required string id = 1;
  optional int32 quantity = 2;
  optional int32 result = 3;
  optional string characterId = 4;
  optional PlayerItem playerItem = 5;
  optional string containerId = 6;
}

local_message RemovePlayerItem {
  required string id = 1;
  required int32 quantity = 2;
  optional int32 result = 3;
  optional string characterId = 4;
}

message Players {
  repeated Player player = 1;
}
  
// For testing
persistent_message TestObject {
  required string id = 12;
  optional string optionalString = 1;
  required string requiredString = 2;
  repeated int32 numbers = 3;
  optional bytes bstring = 4;
  optional bool bvalue = 5;
  optional double dvalue = 6;
  optional float fvalue = 7;
  optional int64 numbers64 = 8;
  repeated Player player = 9;
  optional int32 recordId = 10;
  
}

message RpcMessage {
  enum MessageType {
  	NONE = 0;
    TEST = 1;
  }
  required MessageType messageType = 1;
  optional GameMessage gameMessage = 2;
  optional int64 messageId = 3;
  optional string playerId = 4;
}

local_message Zone {
  enum Status {
		NONE = 0;
		UP = 1;
		DOWN = 2;
		REQUEST_UP = 3;
		REQUEST_DOWN = 4;
	}
	optional string id = 1;
	optional Status status = 2;
	optional string name = 3;
	optional string unityClient = 4;
}

local_persistent_message ZoneInfo {
  required string id = 1;
  optional int32 recordId = 2;
  optional string node = 3;
  required string actorName = 4;
  optional bool assigned = 5;
  optional int32 number = 6;
  optional string hostname = 7;
  optional bool current = 8;
}

local_message ZoneInfos {
  optional string id = 2;
  repeated ZoneInfo zoneInfo = 1;
}

message GameMessage {
  // Used internally, do not change
  optional string playerId = 1;
  optional string messageId = 2;
  optional int32 destinationId = 3;
  optional string destination = 4;
  optional string agentId = 5;
  optional DynamicMessage dynamicMessage = 6;
  optional PathData pathData = 7;

  // User modifiable
  optional PlayerItems playerItems = 10;
  optional AddPlayerItem addPlayerItem = 11;
  optional RemovePlayerItem removePlayerItem = 12;
  optional RequestPlayerItems requestPlayerItems = 13;
  optional PvpGameMessage pvpGameMessage = 14;
  optional Harvest harvest = 15;
  optional int64 authtoken = 16;
  optional int64 unityMessageId = 17;
  optional CraftItem craftItem = 18;
  optional UseSkill useSkill = 19;
  optional PlayerSkills playerSkills = 20;
  optional Vitals vitals = 21;
  optional Attack attack = 22;
  optional StatusEffect statusEffect = 23;
  optional StatusEffectResult statusEffectResult = 24;
  optional DataRequest dataRequest = 25;
  optional WorldObjects worldObjects = 27;
  optional SiegeCommand siegeCommand = 28;
  optional GmBounds bounds = 29;
  optional UseItem useItem = 30;
  optional TimeCycle timeCycle = 31;
  optional Guilds guilds = 32;
  optional GuildAction guildAction = 33;
  optional GuildMemberList guildMemberList = 34;
  optional Territory territory = 35;
  optional Territories territories = 36;
  optional EquippedItem equippedItem = 37;
  optional ComboAttack comboAttack = 38;
  optional NpcData npcData = 39;
  optional BuildObjects buildObjects = 40;
  optional BuildableAreas buildableAreas = 41;
  optional GmStats gmStats = 42;
  optional Zone zone = 43;
  optional BuildObjectChunks buildObjectChunks = 44;
  optional TerrainEdits terrainEdits = 45;
  optional UpdatePlayerItem updatePlayerItem = 46;
  optional VitalsContainer vitalsContainer = 47;
}

message GameMessages {
  repeated GameMessage gameMessage = 1;
}