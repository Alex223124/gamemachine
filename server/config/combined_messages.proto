package com.game_machine.entity_system.generated;
option optimize_for = SPEED;


message Health {
  required  int32  health = 1;
}

message Effect {
  optional  int32  length = 1;
  optional  string  name = 2;
  optional  int32  healthDiff = 3;
  optional  int32  damageDiff = 4;
  optional  int32  timePeriod = 5;
  optional  string  type = 6;
}

message EffectList {
  repeated  Effect  effect = 1;
}

message CombatAbility {
  required  string  name = 1;
  required  int32  damage = 2;
  optional  int32  hitChance = 3;
  required  int32  range = 4;
  optional  string  type = 5;
}

message Attack {
  required  string  attacker = 1;
  required  string  target = 2;
  optional  int32  combatAbilityId = 3;
}

message IsPlayer {
  optional  bool  enabled = 1;
}

message Rpc {
  required string method = 1;
  repeated string arguments = 2;
  optional bool returnValue = 3;
}

message MessageEnvelope {
  required string name = 1;
  optional string server = 2;
  optional string id = 3;
  required string type = 4;
}

message TrackEntity {
  required bool value = 1;
  optional bool internal = 2;
}


message RegisterPlayerObserver {
  required string playerId = 1;
  required string event = 2;
}

message PlayerRegister {
  required string playerId = 1;
  required ClientConnection clientConnection = 2;
  optional string observer = 3;
}

message Disconnected {
  required string playerId = 1;
  required string clientId = 2;
}

message PlayerLogout {
  required string playerId = 1;
  optional string authtoken = 2;
}

message PlayerAuthenticated {
  required string playerId = 1;
}

message ClientDisconnect {
  required ClientConnection clientConnection = 1;
}

message ErrorMessage {
  required string code = 1;
  required string message = 2;
}


message ChatChannels {
  repeated ChatChannel chatChannel = 1;
}

message ChatChannel {
  required string name = 1;
  optional Subscribers subscribers = 2;
  optional string flags = 3;
}

message JoinChat {
  repeated ChatChannel chatChannel = 1;
}

message LeaveChat {
  repeated ChatChannel chatChannel = 1;
}

message ChatMessage {
  required ChatChannel chatChannel = 1;
  required string message = 2;
  required string type = 3;
  optional string senderId = 4;
  optional Entity entity = 5;
}

message ChatRegister {
}

message ChatStatus {
}

message Subscribers {
  repeated string subscriberId = 1;
}

message Subscribe {
  optional string topic = 1;
}

message Unsubscribe {
  required string topic = 1;
}

message Publish {
  optional string topic = 1;
  required Entity message = 2;
  optional string path = 3;
}

message ObjectdbDel {
  required string entityId = 1;
}

message ObjectdbGet {
  required string entityId = 1;
  optional string playerId = 2;
}

message ObjectdbGetResponse {
  required bool entityFound = 1;
}

message ObjectdbPut {
  required Entity entity = 1;
}

message ObjectdbUpdate {
  required string currentEntityId = 1;
  optional string updateClass = 2;
  required string updateMethod = 3;
  required Entity updateEntity = 4;
}

message ClientConnection {
  required string id = 1;
  optional string gateway = 2;
  optional string server = 3;
}


message PlayerLogin {
  required string username = 1;
  required string password = 2;
}

message Name {
  required string value = 1;
}

message IsNpc {
  required bool enabled = 1;
}

message DestroySingleton {
  required string id = 1;
}

message NotifySingleton {
  required string id = 1;
}

message CreateSingleton {
  required string id = 1;
  required string controller = 2;
}

message Player {
  required string id = 1;
  optional string name = 2;
  optional bool authenticated = 3;
  optional string authtoken = 4;
  optional Transform transform = 5;
}


message Vector3 {
  optional float x = 1;
  optional float y = 2;
  optional float z = 3;
  optional int32 xi = 4;
  optional int32 yi = 5;
  optional int32 zi = 6;
}

message Quaternion {
  optional float w = 1;
  optional float x = 2;
  optional float y = 3;
  optional float z = 4;
  optional int32 wi = 5;
  optional int32 xi = 6;
  optional int32 yi = 7;
  optional int32 zi = 8;
}

message Transform {
  optional Vector3 vector3 = 1;
  optional Quaternion quaternion = 2;
}

message EchoTest {
  required string message = 1;
}

message TestObject {
  optional string optionalString = 1;
  required string requiredString = 2;
  repeated int32 numbers = 3;
  optional bytes bstring = 4;
  optional bool bvalue = 5;
  optional double dvalue = 6;
  optional float fvalue = 7;
  optional int64 numbers64 = 8;
  repeated Player player = 9;
  enum Corpus {
    UNIVERSAL = 0;
    WEB = 1;
    IMAGES = 2;
    LOCAL = 3;
    NEWS = 4;
    PRODUCTS = 5;
    VIDEO = 6;
  }
  optional Corpus corpus = 10;
  repeated Corpus corpus2 = 11;
}
  
  
message Neighbors {
  repeated Entity npc = 1;
  repeated Entity player = 2;
}

message GetNeighbors {
  optional uint32 search_radius = 2;
  required Vector3 vector3 = 3;
  optional string neighborType = 4;
  optional string gridName = 5;
}

message MessageRouting {
  optional string destination = 1;
  optional string senderId = 2;
  optional string id = 3;
}

message NativeBytes {
  required bytes bytes = 1;
}

message JsonEntity {
  required string json = 1;
}

message Entity {
  optional Player player = 1;
  optional Neighbors neighbors = 2;
  optional MessageEnvelope messageEnvelope = 3;
  optional ChatMessage chatMessage = 4;
  optional ClientConnection clientConnection = 5;
  optional EchoTest echoTest = 6;
  required string id = 7;
  optional PlayerLogin playerLogin = 8;
  optional Subscribe subscribe = 9;
  optional Publish publish = 10;
  optional ChatChannel chatChannel = 11;
  optional JoinChat joinChat = 12;
  optional LeaveChat leaveChat = 13;
  optional Unsubscribe unsubscribe = 14;
  optional ChatRegister chatRegister = 15;
  optional ChatChannels chatChannels = 16;
  optional ErrorMessage errorMessage = 17;
  optional RegisterPlayerObserver registerPlayerObserver = 18;
  optional GetNeighbors getNeighbors = 21;
  optional TrackEntity trackEntity = 22;
  optional Transform transform = 23;
  optional IsNpc isNpc = 24;
  optional Vector3 vector3 = 25;
  optional CreateSingleton createSingleton = 26;
  optional EntityList entityList = 27;
  optional bool  published = 29;
  optional string entityType = 30;
  optional NotifySingleton notifySingleton = 31;
  optional DestroySingleton destroySingleton = 32;
  optional PlayerAuthenticated playerAuthenticated = 37;
  optional PlayerLogout playerLogout = 38;
  optional bool sendToPlayer = 39;
  optional Rpc rpc = 40;
  optional Subscribers subscribers = 41;
  optional bool save = 42;
  optional MessageRouting messageRouting = 43;
  optional ObjectdbGetResponse objectdbGetResponse = 44;
  optional NativeBytes nativeBytes = 45;
  optional ObjectdbGet objectdbGet = 46;
  optional JsonEntity jsonEntity = 47;
  optional string destination = 48;
  optional bool json = 49;
  optional string params = 50;
  optional ChatStatus chatStatus = 51;
  optional Health health = 1000;
optional Effect effect = 1001;
optional EffectList effectList = 1002;
optional CombatAbility combatAbility = 1003;
optional Attack attack = 1004;
optional IsPlayer isPlayer = 1005;
}

message EntityList {
  repeated Entity entity = 1;
}

message ClientMessage {
  repeated Entity entity = 1;
  optional Player player = 2;
  optional PlayerLogin playerLogin = 3;
  optional ClientConnection clientConnection = 4;
  optional ClientDisconnect clientDisconnect = 5;
  optional PlayerLogout playerLogout = 6;
  optional ErrorMessage errorMessage = 17;
}
